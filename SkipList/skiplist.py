# -*- coding: utf-8 -*-
from __future__ import print_function

"""
跳表：一种动态数据结构，可以支持快速的插入、删除、查找操作。Redis中的有序集合（Sorted Set）就是用跳表实现的。
链表+多级索引的结构就是跳表。
跳表查询的时间复杂度：
    最高级的索引有2个节点，如果包含原始链表这一层，则整个跳表的高度就是logn，在跳表中查询某个数据时，每一层都要遍历3个节点，那么在跳表中查询任意数据的时间复杂度就是O(logn)。
    换句话说，我们基于单链表实现了“二分查找”。
跳表的空间复杂度：
    比起单纯的单链表，跳表需要存储多级索引，肯定需要消耗更多的存储空间，空间复杂度是O(n)。
    在实际软件开发中，原始链表存储的可能是很大的对象，而索引节点只需要存储关键值和几个指针，并不需要存储对象，因此当对象比索引节点大很多时，那么索引占用的额外空间就可以忽略了。
跳表的插入和删除操作：
    插入、删除的时间复杂度都是O(logn)
跳表索引的动态更新：
    跳表通过随机函数来维护“平衡性”
    插入数据时，通过一个随机函数，来决定同时将这个数据插入到部分索引层中。
    随机函数的选择很有讲究，从概率上讲，能够保证跳表索引大小和数据大小的平衡，不至于性能过度退化。
注：跳表比较适合按照区间查找数据的操作
"""


if __name__ == "__main__":
    pass
